"""added a air_travel.db

Revision ID: fee14454a804
Revises: 
Create Date: 2025-03-13 17:51:49.681451

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fee14454a804'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airplanes',
    sa.Column('airplane_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('airline', sa.String(), nullable=False),
    sa.Column('manufacture_year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('airplane_id')
    )
    op.create_table('airports',
    sa.Column('airport_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('airport_id')
    )
    op.create_table('passengers',
    sa.Column('passenger_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('passport_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('passenger_id')
    )
    op.create_table('flights',
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('flight_number', sa.String(), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.Column('destination', sa.String(), nullable=False),
    sa.Column('airplane_id', sa.Integer(), nullable=True),
    sa.Column('airport_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['airplane_id'], ['airplanes.airplane_id'], ),
    sa.ForeignKeyConstraint(['airport_id'], ['airports.airport_id'], ),
    sa.PrimaryKeyConstraint('flight_id')
    )
    op.create_table('maintenance_records',
    sa.Column('maintenance_id', sa.Integer(), nullable=False),
    sa.Column('airplane_id', sa.Integer(), nullable=True),
    sa.Column('last_maintenance_date', sa.DateTime(), nullable=False),
    sa.Column('next_due_maintenance_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['airplane_id'], ['airplanes.airplane_id'], ),
    sa.PrimaryKeyConstraint('maintenance_id')
    )
    op.create_table('bookings',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('seat_number', sa.String(), nullable=False),
    sa.Column('booking_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.flight_id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.passenger_id'], ),
    sa.PrimaryKeyConstraint('booking_id')
    )
    op.create_table('passenger_flight_association',
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.flight_id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.passenger_id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('passenger_flight_association')
    op.drop_table('bookings')
    op.drop_table('maintenance_records')
    op.drop_table('flights')
    op.drop_table('passengers')
    op.drop_table('airports')
    op.drop_table('airplanes')
    # ### end Alembic commands ###
